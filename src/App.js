import { useState, useEffect } from "react";
import "./styles.css";

const DATA = [
  { id: 3, sentence: "Tack f√∂r hj√§lpen! ‚ú®" },
  {
    id: 4,
    sentence:
      "Skillnaden mellan Sverige och Italien i brott och straff √§r h√∂g. F√∂rst √§r korruptionen som tyv√§rr √§r mycket popul√§r och den p√•verkar alla delar av samh√§llet, fr√•n politiker, f√∂retag till privatpersoner. Undvikande av skatt √§r ocks√• s√§mst j√§mf√∂rt med Sverige, f√• m√§nniskor arbetar i svart under st√∂rre delen av sitt liv. "
  },
  {
    id: 5,
    sentence:
      "Lyckligtvis tack f√∂r digitaliseringen och √§ven tack vare covid, elektronisk betalning har varit popul√§r den senaste tiden, s√• dessa trender f√∂r√§ndras och regeringen kan sp√•ra sina medborgare b√§ttre"
  },
  {
    id: 6,
    sentence: "Och sist maffian, som inneb√§r smuggling, f√∂rfalskning och mord. "
  },
  {
    id: 7,
    sentence:
      "Det b√∂rjade fr√•n s√∂dra Italien och nu utvecklades det √∂ver hela v√§rlden. "
  }
];

function GetData(props) {
  const [data, setData] = useState({});
  useEffect(() => {
    fetch("https://swapi.dev/api/people/" + props.id)
      .then((response) => response.json())
      .then((result) => setData(result));
  }, [props.id]);
  return (
    <div>
      <p style={{ fontStyle: "italic", color: "#9245" }}>
        Detta √§r ett slumpm√§ssigt namn fr√•n ett Star Wars API:{" "}
        {data && data.name}
      </p>
    </div>
  );
}
function NormalCSS() {
  return <h1 className="very-big-text">En historia p√• svenska</h1>;
}
function InLineStyle() {
  const fontStyle = { fontSize: 16, fontStyle: "italic" };
  return <p style={fontStyle}>om straff och brott üî•</p>;
}
function MyList(props) {
  const [count, setCount] = useState(3);

  const Conta = () => {
    setCount(count - 1);
  };
  return (
    <div>
      {count !== 0 && (
        <>
          Kan du hj√§lpa mig att visa min text genom att klicka h√§r minst {count}{" "}
          g√•nger?
          <button onClick={Conta}>klicka h√§r</button>
        </>
      )}
      {count === 0 &&
        props.items.map((words) => {
          return <p key={words.id}>{words.sentence}</p>;
        })}
    </div>
  );
}
function Greetings(props) {
  return (
    <>
      K√§ra {props.nameColleague1} and {props.nameColleague2}
    </>
  );
}
export default function App() {
  function getRandomInt(max) {
    return Math.floor(Math.random() * max);
  }
  return (
    <div className="App">
      <NormalCSS />
      <InLineStyle />
      <Greetings nameColleague1={"Cecilia"} nameColleague2={"Andre"} />
      <MyList items={DATA} />
      <GetData id={getRandomInt(10)} />
    </div>
  );
}
